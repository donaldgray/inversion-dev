<?xml version="1.0" encoding="utf-8" ?>
<objects
	xmlns="http://www.springframework.net"
	xmlns:behaviour="Inversion.Process.Behaviour"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.net http://www.springframework.net/xsd/spring-objects.xsd"
>
	<description>Behaviours</description>

	<!-- 
		behaviours: singletons 
		singletons are the default in Spring, so unless you see
		singleton="false" on an object defination, it's a singleton
	-->

	<object name="request-behaviours" type="BehaviourList">
		<constructor-arg>
			<list  element-type="Inversion.Process.Behaviour.IProcessBehaviour, Inversion.Process">

				<message-trace responds-to="*" xmlns="Inversion.Process.Behaviour">
					<event has="related-loc" />
				</message-trace>

				<message-sequence responds-to="process-request" xmlns="Inversion.Process.Behaviour">
					<fire>
						<bootstrap />
						<parse-request />
						<work />
						<view-state />
						<process-views />
						<render />
					</fire>
				</message-sequence>

				<object type="Inversion.Web.Behaviour.BootstrapBehaviour, Inversion.Web">
					<constructor-arg name="respondsTo" value="bootstrap" />
					<constructor-arg name="parms">
						<dictionary key-type="string" value-type="string">
							<entry key="area" value="default" />
							<entry key="concern" value="default" />
							<entry key="action" value="default" />
							<entry key="appPath" value="/web.harness" />
							<entry key="baseDirectory" value="e:\Users\User\Documents\GitHub\inversion-dev\Inversion.Web.Harness.Site\" />
						</dictionary>
					</constructor-arg>
				</object>

				<object type="Inversion.Web.Behaviour.ParseRequestBehaviour, Inversion.Web">
					<constructor-arg name="respondsTo" value="parse-request" />
					<constructor-arg name="appDirectory" value="Inversion.Web.Harness.Site" />
				</object>

				<!--<object type="Inversion.Web.Behaviour.AuthenticateBehaviour, Inversion.Web">
					<constructor-arg index="0" value="authenticate" />
				</object>-->

				<object type="Inversion.Web.Behaviour.ViewStateBehaviour, Inversion.Web">
					<constructor-arg name="respondsTo" value="view-state" />
				</object>

				<object type="Inversion.Web.Behaviour.ProcessViewsBehaviour, Inversion.Web">
					<constructor-arg name="respondsTo" value="process-views" />
				</object>

				<object type="Inversion.Web.Behaviour.RenderBehaviour, Inversion.Web">
					<constructor-arg name="respondsTo" value="render" />
				</object>

				<!-- VIEWS -->

				<object type="Inversion.Web.Behaviour.View.RazorViewBehaviour, Inversion.Web">
					<constructor-arg name="respondsTo" value="rzr::view" />
					<constructor-arg name="contentType" value="text/html" />
				</object>

				<behaviour:configure responds-to="xml::view" type="Inversion.Web.Behaviour.View.XmlViewBehaviour, Inversion.Web">
					<constructor-arg name="contentType" value="text/xml" />
				</behaviour:configure>

				<behaviour:configure responds-to="json::view" type="Inversion.Web.Behaviour.View.JsonViewBehaviour, Inversion.Web">
					<constructor-arg name="contentType" value="text/json" />
				</behaviour:configure>

				<object type="Inversion.Web.Behaviour.View.XsltViewBehaviour, Inversion.Web">
					<constructor-arg name="respondsTo" value="xslt::view" />
					<constructor-arg name="contentType" value="text/xml" />
				</object>

				<object type="Inversion.Web.Behaviour.View.XsltViewBehaviour, Inversion.Web">
					<constructor-arg name="respondsTo" value="xsl::view" />
					<constructor-arg name="contentType" value="text/html" />
				</object>

				<object type="Inversion.DotLiquid.Behaviour.View.DotLiquidViewBehaviour, Inversion.DotLiquid">
					<constructor-arg name="respondsTo" value="liquid::view" />
					<constructor-arg name="contentType" value="text/html" />
				</object>

				<object type="Inversion.StringTemplate.Behaviour.View.StringTemplateViewBehaviour, Inversion.StringTemplate">
					<constructor-arg name="respondsTo" value="st::view" />
					<constructor-arg name="contentType" value="text/html" />
				</object>

				<!-- app -->

				<message-sequence responds-to="work" xmlns="Inversion.Process.Behaviour">
					<context has="id">
						<match concern="topic" action="view" />
						<exclude area="admin" />
					</context>
					<control-state has="test" />
					<fire>
						<tm-get-topic topic-loc="current-topic" />
						<tm-get-related-for-topic topic-loc="current-topic" related-loc="current-topic-related" />
						<tm-resolve-topic-blogs related-loc="current-topic-related" />
						<tm-resolve-topic-comments related-loc="current-topic-related" />
					</fire>
				</message-sequence>


			</list>
		</constructor-arg>
	</object>

</objects>