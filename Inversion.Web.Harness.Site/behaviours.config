<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net">
	<description>Behaviours</description>

	<!-- 
		behaviours: singletons 
		singletons are the default in Spring, so unless you see
		singleton="false" on an object defination, it's a singleton
	-->

	<object name="request-behaviours" type="BehaviourList">
		<constructor-arg index="0">
			<list element-type="Inversion.Process.Behaviour.IProcessBehaviour, Inversion.Process">

				<object type="Inversion.Process.Behaviour.SimpleSequenceBehaviour, Inversion.Process">
					<constructor-arg index="0" value="process-request" />
					<constructor-arg index="1" ref="life-cycle" />
				</object>

				<object type="Inversion.Web.Behaviour.BootstrapBehaviour, Inversion.Web">
					<constructor-arg index="0" value="bootstrap" />
					<constructor-arg index="1">
						<dictionary key-type="string" value-type="string">
							<entry key="area" value="default" />
							<entry key="concern" value="default" />
							<entry key="action" value="default" />
							<entry key="app-path" value="/web.harness" />
						</dictionary>
					</constructor-arg>
				</object>

				<object type="Inversion.Web.Behaviour.ParseRequestBehaviour, Inversion.Web">
					<constructor-arg index="0" value="parse-request" />
					<constructor-arg index="1" value="Inversion.Web.Harness.Site" />
				</object>

				<!--<object type="Inversion.Web.Behaviour.AuthenticateBehaviour, Inversion.Web">
					<constructor-arg index="0" value="authenticate" />
				</object>-->

				<object type="Inversion.Web.Behaviour.ViewStateBehaviour, Inversion.Web">
					<constructor-arg index="0" value="view-state" />
				</object>

				<object type="Inversion.Web.Behaviour.ProcessViewsBehaviour, Inversion.Web">
					<constructor-arg index="0" value="process-views" />
				</object>

				<object type="Inversion.Web.Behaviour.RenderBehaviour, Inversion.Web">
					<constructor-arg index="0" value="render" />
				</object>

				<!-- VIEWS -->

				<object type="Inversion.Web.Behaviour.View.RazorViewBehaviour, Inversion.Web">
					<constructor-arg name="message" value="rzr::view" />
				</object>

				<object type="Inversion.Web.Behaviour.View.XmlViewBehaviour, Inversion.Web">
					<constructor-arg name="message" value="xml::view" />
					<constructor-arg name="contentType" value="text/xml" />
				</object>

				<object type="Inversion.Web.Behaviour.View.JsonViewBehaviour, Inversion.Web">
					<constructor-arg name="message" value="json::view" />
					<constructor-arg name="contentType" value="text/json" />
				</object>

				<object type="Inversion.Web.Behaviour.View.XsltViewBehaviour, Inversion.Web">
					<constructor-arg name="message" value="xslt::view" />
					<constructor-arg name="contentType" value="text/xml" />
				</object>

				<object type="Inversion.Web.Behaviour.View.XsltViewBehaviour, Inversion.Web">
					<constructor-arg name="message" value="xsl::view" />
					<constructor-arg name="contentType" value="text/html" />
				</object>

				<!-- app -->

				<object type="Inversion.Process.Behaviour.ParameterisedSequenceBehaviour, Inversion.Process">
					<constructor-arg name="message" value="work" />

					<constructor-arg name="namedLists">
						<dictionary key-type="string" value-type="NamedList">
							<entry key="sequence">
								<list element-type="string">
									<value>seq.tm::get-topic</value>
									<value>seq.tm::get-related-for-current-topic</value>
									<value>seq.tm::resolve-comments-for-current-topic</value>
									<value>seq.tm::resolve-blogs-for-current-topic</value>
								</list>
							</entry>
						</dictionary>
					</constructor-arg>

					<constructor-arg name="namedMaps">
						<dictionary key-type="string" value-type="NamedMap">
							
							<entry key="matching-all-param-values">
								<dictionary key-type="string" value-type="string">
									<entry key="action" value="hello" />
								</dictionary>
							</entry>
							
							<entry key="seq.tm::get-topic">
								<dictionary key-type="string" value-type="string">
									<entry key="topic-slot" value="current-topic" />
								</dictionary>
							</entry>
							<entry key="seq.tm::get-related-for-current-topic">
								<dictionary key-type="string" value-type="string">
									<entry key="topic-slot" value="current-topic" />
									<entry key="topic-related-slot" value="current-topic-related" />
								</dictionary>
							</entry>
							<entry key="seq.tm::resolve-comments-for-current-topic">
								<dictionary key-type="string" value-type="string">
									<entry key="topic-slot" value="current-topic" />
									<entry key="topic-related-slot" value="current-topic-related" />
								</dictionary>
							</entry>
							<entry key="seq.tm::resolve-blogs-for-current-topic">
								<dictionary key-type="string" value-type="string">
									<entry key="topic-slot" value="current-topic" />
									<entry key="topic-related-slot" value="current-topic-related" />
								</dictionary>
							</entry>
						</dictionary>
					</constructor-arg>

					<constructor-arg name="namedMappedLists">
						<dictionary key-type="string"  value-type="NamedMappedLists">
							<entry key="matching-all-param-values">
								<dictionary key-type="string" value-type="NamedList">
									<entry key="concern">
										<list element-type="string">
											<value>topic</value>
											<value>project</value>
										</list>
									</entry>
								</dictionary>
							</entry>
						</dictionary>
					</constructor-arg>
					
				</object>
				
			</list>
		</constructor-arg>
	</object>

</objects>